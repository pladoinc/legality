/**
 * scripts/create-cache.js - Legality by PLADO
 * Generates a new CACHE.manifest file.
 *
 * Licensed under MIT.
 * Copyright (C) 2016 PLADO.
 */

'use strict';

const fs = require('fs')
    , path = require('path')
    , getTree = function (dir) {
        return fs.readdirSync(dir).map(file => {
            file = path.resolve(dir, file)

            if (fs.statSync(file).isFile()) return file
            return getTree(file)
        }).reduce((arr, e) => {
            if (e instanceof Array) return arr.concat(e)
            return arr.concat([e])
        }, [])
    }

module.exports = () => new Promise((resolve, reject) => {
    fs.stat(path.resolve(__dirname, '..', 'data'), function (err, stats) {
        fs.writeFile(path.resolve(__dirname, '..', 'cache.mf'),
`CACHE MANIFEST
# Last modified: ${+stats.mtime}
# Do not modify this file directly.
# It is automatically generated by the scripts/create-cache.js script.

${getTree(path.resolve(__dirname, '..', 'data')).map(f=>f.replace(path.resolve(__dirname, '..'), '')).join('\n')}

NETWORK:
*
`, err => {
            if (err) reject(err)
            else resolve()
        })
    })
})
